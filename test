qSSSimport json
import logging
import boto3
import firebase_admin
from firebase_admin import credentials, db
from jose import jwt

# Configure Firebase credentials
firebase_cred = credentials.Certificate('/path/to/firebase_credentials.json')
firebase_admin.initialize_app(firebase_cred, {'databaseURL': 'https://your-firebase-url.firebaseio.com'})

# Configure AWS Secrets Manager client
secrets_manager = boto3.client('secretsmanager')

# Set up logging
logger = logging.getLogger()
logger.setLevel(logging.INFO)

def lambda_handler(event, context):
    try:
        # Retrieve the JWT token from the payload
        token = event['headers'].get('Authorization', '').split('Bearer ')[-1]
        
        # Validate the JWT token
        validate_jwt_token(token)
        
        # Extract the data from the payload
        payload = json.loads(event['body'])
        data = payload['data']
        
        # Send data to Firebase API
        send_data_to_firebase(data)
        
        # Return a success response
        return {
            'statusCode': 200,
            'body': json.dumps({'message': 'Data sent to Firebase successfully.'})
        }
    
    except jwt.JWTError:
        logger.error('Invalid or expired JWT token.')
        return {
            'statusCode': 401,
            'body': json.dumps({'error': 'Invalid or expired JWT token.'})
        }
    
    except Exception as e:
        logger.error(f'An error occurred: {str(e)}')
        return {
            'statusCode': 500,
            'body': json.dumps({'error': 'An error occurred while processing the request.'})
        }

def validate_jwt_token(token):
    # Fetch the public key from AWS Secrets Manager
    response = secrets_manager.get_secret_value(SecretId='jwt-public-key')
    public_key = response['SecretString']
    
    # Validate the JWT token using python-jose
    jwt.decode(token, public_key, algorithms=['RS256'])
    
def send_data_to_firebase(data):
    # Push the data to the Firebase Realtime Database
    ref = db.reference('/path/to/collection')
    ref.push(data)
    
    logger.info('Data sent to Firebase successfully.')
